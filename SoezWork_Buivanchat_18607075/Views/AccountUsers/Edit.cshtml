@model SoezWork_Buivanchat_18607075.Models.AccountUser

@{
    ViewBag.Title = "Edit";
    Layout = null;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AccountUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserTypeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @*@Html.LabelFor(model => model.UserTypeId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Label("Loại người dùng"@*, htmlAttributes: new { @class = "control-label col-md-2" }*@)
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.UserTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.UserTypeId, new SelectList(Model.UserTypeCollection, "UserTypeId", "UserTypeName"), "Chọn loại người dùng...")
                @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Display, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Display)
                    @Html.ValidationMessageFor(model => model.Display, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-inline">
            Chọn ảnh đại diện
            @*<input type="text" name="picture" id="picture" class="form-control" />*@
            @Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control", @name = "picture", @id = "picture" } })
            <input type="file" id="fileUpload" accept="image/*" name="fileUpload" style="display:none" />
            <input type="button" id="btnUpload" value="..." class="btn btn-success" />
            <img id="pictureUpload" width="300" />
            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*@section upload {*@
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
    $(function () {
        //đăng ký sự kiện click nút btnUpload
        $('#btnUpload').click(function () {
            $('#fileUpload').trigger('click');
        });
        //bắt sự kiện trên data của file upload
        $('#fileUpload').change(function () {
            //kiểm tra trình duyệt có hỗ trợ form-data object hay không?
            if (window.FormData !== undefined) {
                //lấy dữ liệu trên fileUpload
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                //tạo đối tượng formdata
                var formData = new FormData();
                //đưa dữ liệu vào form
                formData.append('file', files[0]);
                $.ajax(
                    {
                        type: 'POST',
                        url: '/AccountUsers/ProcessUpload',
                        contentType: false,//khong co header
                        processData: false,//khoong  xu ly du lieu
                        data: formData,
                        success: function (urlImage) {
                            $('#pictureUpload').attr('src', urlImage);
                            $('#picture').val(urlImage);
                        },
                        error: function (err) {
                            alert('Loi roi: ' + err.statusText);
                        }
                    })
            }
        });
    });
</script>
@*}*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
